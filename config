# Fully commented gitconfig file

# Much better looking than my non-commented config file

# The oroginal giost was located at:
# https://gist.github.com/daedam/0f738d7baa52920035f837dc22929da2

# Documentation & further reading:
# https://git-scm.com/docs/git-config
# _______________________________________________________________
# Last updated: 2024-08-07


# External files to include into this .config file
[include]
  path = aliases

[core]
  # windows line endings \r\n
  autocrlf = true
  editor = vscode
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
  # set pager to cat instead of delta as cat is more platform independent
  pager = cat # delta
  excludesfile = ignore

# Set all local directories to safe
[safe]
  directory = *

# Set the local git users credentials
[user]
  name = Brenton Holiday
  email = 8rents@gmail.com
  username = 8rents

# GitHub credentials
[github]
  user = 8rents
  token = token

# Set the default branch name to "main"
[init]
  defaultBranch = main

[gitflow "prefix"]
  versiontag = v

[sequence]
  editor = interactive-rebase-tool


# Git Large File Storage (LFS) replaces large files such as audio samples, videos, datasets, and graphics with text pointers
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

# Email config - Send a collection of patches as emails
[sendemail]
  smtpencryption = tls
  smtpserver = smtp.gmail.com
  smtpuser = 8rents@gmail.com
  smtppass = password
  smtpserverport = 587

# Web Browser
[web]
  browser = google-chrome

# Always use https:// protocol, even if the git:// protocol was requested
[url "https://"]
  insteadOf = git://

# Always prune deleted remote branches when fetching
[fetch]
  prune = true

# Instantly browse your working repository in gitweb
[instaweb]
  httpd = apache2 -f

# The git rerere functionality is a bit of a hidden feature. The name stands for “reuse recorded resolution” and, as the name implies, it allows you to ask Git to remember how you’ve resolved a hunk conflict so that the next time it sees the same conflict, Git can resolve it for you automatically.
[rerere]
  enabled = 1
  autoupdate = 1

# Platform-independent configuration for using Visual Studio Code for merges/diffs (make sure that the 'code' executable is in the path)
[diff]
  #tool = vscode   # Uncomment to use VS Code for diffing
[difftool "vscode"]
  name = vscode
  cmd = code --wait --diff $LOCAL $REMOTE

# Set the merge tool 
[merge]
  tool = vscode   # Uncomment to use VS Code for merging

# Settings for the mergetool
[mergetool]
  prompt = false
  keepBackup = false
  keepTemporaries = false
[mergetool "vscode"]
  cmd = code --wait $MERGED

# Features for Delta - merge and pager tool
# [delta]
#   features = line-numbers decorations
#   line-numbers = true

# [delta "decorations"]
#   minus-style = red bold normal
#   plus-style = green bold normal
#   minus-emph-style = white bold red
#   minus-non-emph-style = red bold normal
#   plus-emph-style = white bold green
#   plus-non-emph-style = green bold normal
#   file-style = yellow bold none
#   file-decoration-style = yellow box
#   hunk-header-style = magenta bold
#   hunk-header-decoration-style = magenta box
#   minus-empty-line-marker-style = normal normal
#   plus-empty-line-marker-style = normal normal
#   line-numbers-right-format = "{np:^4}│ "
